{"version":3,"sources":["components/ColorGrading/PaginationControl.js","utils/palette.js","components/ColorGrading/ProductItem.js","components/common/Modal.js","pages/ColorGrading.js","pages/Contact.js","utils/routes.js","pages/Nosotros.js","components/common/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["PaginationControl","style","setCurrentPage","currentPage","totalPages","StyledPaginationControl","className","onClick","Array","map","e","index","key","styled","section","palette","blue","red","green","yellow","purple","getColor","color","ProductItem","props","StyledProductItem","title","productTitle","productCategory","backgroundImage","thumbnailUrl","li","StyledModal","Modal","closeModal","isModalOpen","productData","modalNode","document","getElementById","product_vimeo_id","text","console","log","ReactDOM","createPortal","product_title","product_year","product_type","product_thumbnail","url","ColorGrading","useState","allProducts","setAllProducts","currentPageProducts","setCurrentPageProducts","setIsModalOpen","selectedProductIndex","setSelectedProductIndex","page","useParams","history","useHistory","client","Prismic","mergeSlices","response","i","j","temparray","results","data","body","separatedArray","length","slice","push","useEffect","parseInt","a","query","Predicates","at","getPrismicResponse","StyledColorGrading","onKeyDown","keyCode","tabIndex","StyledProductContainer","product","category","primary","productID","Contact","routes","name","renderedComponent","navbarEnabled","navbarClass","StyledNavbar","div","Navbar","route","to","StyledApp","App","path","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a31396c0.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {FaCaretLeft, FaCaretRight} from 'react-icons/fa';\n\nconst PaginationControl = ({\n    style,\n    setCurrentPage,\n    currentPage,\n    totalPages\n}) => {\n    return (\n        <StyledPaginationControl className=\"pagination-controls\">\n            <span \n                onClick={() => {setCurrentPage(currentPage - 1)}}\n                className={\n                    'control ' + (\n                        currentPage == 1 && 'disabled'\n                    )\n                }\n            >\n                <FaCaretLeft />\n            </span>\n            {style == 'full' ? (\n            <section className=\"list-selector-container\">\n                <ul className=\"page-list\">\n                    {[...Array(totalPages)].map((e,index) => (\n                        <li \n                            className={index + 1 == currentPage ? 'selected' : ''}\n                            onClick={() => {setCurrentPage(index + 1)}}\n                            key={index}>\n                            {index + 1}\n                        </li>))\n                    }\n                </ul>\n            </section>\n            ) : (\n            <section className=\"input-selector-container\">\n                <section className=\"input-selector\">\n                    <span className=\"current-page\">\n                        {currentPage}\n                    </span> / <span className=\"total-pages\">{totalPages}</span>\n                </section>\n            </section>\n            )}\n            <span \n                onClick={() => {setCurrentPage(currentPage + 1)}}\n                className={\n                    'control ' + (\n                        currentPage == totalPages && 'disabled'\n                    ) \n                }\n            > <FaCaretRight />\n            </span>\n        </StyledPaginationControl>\n    )\n}\n\nexport default PaginationControl;\n\nconst StyledPaginationControl = styled.section`\n    margin-top: 10px;\n    text-align: center;\n    padding-bottom: 10px;\n    .control {\n        cursor: pointer;\n        position: relative;\n        top: .5rem;\n        transition: .2s ease-in opacity;\n        opacity: .7;\n        &:hover {\n            opacity: 1;\n        }\n        svg {\n            font-size: 1.5rem;\n        }\n    }\n    .control.disabled {\n        opacity: .2;\n        pointer-events: none;\n    }\n    .list-selector-container {\n        display: flex;\n        justify-content: space-between;\n        flex-grow: 1;\n        padding: 0px 15%;\n        font-size: .8rem;\n        .page-list {\n            display: flex;\n            justify-content: space-between;\n            li {\n                opacity: .5;\n                display: inline-block;\n                cursor: pointer;\n                transition: .2s ease-in-out opacity;\n            }\n            li.selected {\n                opacity: 1;\n            }\n        }\n    }\n    .input-selector-container {\n        text-align: center;\n        width: 50%;\n        display: inline-block;\n        margin: auto;\n        .total-pages {\n            opacity: .7;\n            font-size: .8rem;\n        }\n        span {\n            line-height: 1.5rem;\n        }\n    }\n`;","const getColor = color => {\n    return palette[color];\n};\n\nconst palette = {\n    blue: '#568AEF',\n    red: '#CE4646',\n    green: '#56C576',\n    yellow: '#F7D977',\n    purple: '#9A63C9'\n}\n\nexport default getColor;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from './../../utils/palette';\n\nconst ProductItem = props => {\n    return (\n        <StyledProductItem \n            title={props.productTitle}\n            onClick={props.onClick}>\n            <section className=\"title-container\">\n                <h2>\n                    <span \n                        className={`type-tag ${\n                            props.productCategory\n                        }`}>•</span>\n                    {props.productTitle}\n                </h2>\n            </section>\n            <div \n                className=\"product-thumbnail\"\n                style={{\n                    backgroundImage:`url(${props.thumbnailUrl})`\n                }}>\n            </div>\n        </StyledProductItem>\n    )\n};\n\nexport default ProductItem;\n\nconst StyledProductItem = styled.li`\n    display: inline-block;\n    width: 24%;\n    cursor: pointer;\n    margin-bottom: 20px;\n    .title-container {\n        display: flex;\n        h2 {\n            white-space: nowrap;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            opacity: .8;\n            margin-bottom: 5px;\n            font-size: 1rem;\n            display: inline-block;\n            background: transparent;\n            position: relative;\n            width: 100%;\n            padding-right: 20px;\n            .type-tag {\n                position: absolute;\n                font-size: 1rem;\n                right: 0;\n                top: 2px;\n                transform: scale(3);\n                margin-right: 5px;\n                &.largometraje {\n                    color: ${palette('blue')};\n                }\n                &.cortometraje {\n                    color: ${palette('red')};\n                }\n                &.videoclip {\n                    color: ${palette('green')};\n                }\n                &.comercial {\n                    color: ${palette('yellow')};\n                }\n                &.serie {\n                    color: ${palette('purple')};\n                }\n            }\n        }\n    }\n    .product-thumbnail {\n        width: 100%;\n        height: 25vh;\n        background-size: cover;\n        border-radius: 3px;\n    }\n`;","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport palette from './../../utils/palette';\n\nconst StyledModal = styled.section`\n        &.hidden {\n            visibility: hidden;\n        }\n        .modal-body {\n            background: white;\n            width: 70vw;\n            margin: 15vh 15vw;\n            position: absolute;\n            top: 0;\n            z-index: 2;\n            padding-bottom: 10px;\n            .video-container {\n                background: black;\n                width: 100%;\n                height: 300px;\n                .video-placeholder {\n                    width: 80%;\n                    height: 100%;\n                    margin: 0 auto;\n                    background-size: cover;\n                } \n            }\n            .modal-header {\n                display: flex;\n                justify-content: space-between;\n                color: black;\n                padding: 10px 20px;\n                background: white;\n                h1 {\n                    font-size: 1.4rem;\n                    color: inherit;\n                    text-transform: capitalize;\n                    .year {\n                        font-weight: normal;\n                        font-size: .9rem;\n                        margin-left: 5px;\n                        opacity: .7;\n                        color: inherit;\n                    }\n                }\n                .category-tag {\n                    color: inherit;\n                    padding: 5px 10px;\n                    border-radius: 25px;\n                    font-size: .8rem;\n                    color: rgba(0,0,0,.8);\n                    border: 1px solid transparent;\n                    &.largometraje {\n                        color: ${palette('blue')};\n                        border-color: ${palette('blue')};\n                    }\n                    &.cortometraje {\n                        color: ${palette('red')};\n                        border-color ${palette('red')};\n                    }\n                    &.videoclip {\n                        color: ${palette('green')};\n                        border-color: ${palette('green')};\n                    }\n                    &.comercial {\n                        color: ${palette('yellow')};\n                        border-color: ${palette('yellow')};\n                    }\n                    &.serie {\n                        color: ${palette('purple')};\n                        border-color: ${palette('purple')};\n                    }\n                }\n            }\n        }\n        .modal-underlay {\n            background: black;\n            opacity: .8;\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 100vw;\n            height: 100vh;\n            overflow: hidden;\n            z-index: 1;\n        }\n`;\n\nconst Modal = ({\n    closeModal,\n    isModalOpen,\n    productData\n}) => {\n    const modalNode = document.getElementById('modal-root');\n    const vimeoID = productData.product_vimeo_id[0].text;\n    console.log(productData)\n    return (\n        ReactDOM.createPortal(\n            (<StyledModal\n                className={`modal ${!isModalOpen ? 'hidden' : ''}`}>\n                <section \n                    className=\"modal-underlay\"\n                    onClick={closeModal}>\n                </section>\n                <section className=\"modal-body\">\n                    <section className=\"modal-header\">\n                        <h1>\n                            {productData.product_title[0].text}\n                            {productData.product_year[0].text && (\n                                <span className=\"year\">\n                                    {productData.product_year[0].text}\n                                </span>\n                            )}\n                        </h1>\n                        <span className={`category-tag ${productData.product_type}`}>\n                            {productData.product_type}\n                        </span>\n                    </section>\n                    <section className=\"video-container\">\n                        <section \n                        className=\"video-placeholder\"\n                        style={{\n                            backgroundImage: `url(${productData.product_thumbnail.url})`\n                        }}></section>\n                    </section>\n                </section>\n            </StyledModal>\n            ), modalNode\n        )\n    )\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport Prismic from 'prismic-javascript';\nimport styled from 'styled-components';\nimport PaginationControl from './../components/ColorGrading/PaginationControl';\nimport ProductItem from './../components/ColorGrading/ProductItem';\nimport {useParams, useHistory} from 'react-router-dom';\nimport Modal from './../components/common/Modal'\n\n\nconst ColorGrading = props => {\n    const [prismicResponse, setPrismicResponse] = useState([]);\n    const [allProducts, setAllProducts] = useState(null);\n    const [currentPageProducts, setCurrentPageProducts] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedProductIndex, setSelectedProductIndex] = useState(null);\n    const { page } = useParams();\n    let history = useHistory();\n    \n    const apiEndpoint = 'https://crowsnest.cdn.prismic.io/api/v2';\n    const client = Prismic.client(apiEndpoint);\n    \n\n    const mergeSlices = response => {\n        const allProducts = response.results[0].data.body;\n        const separatedArray = [];\n        \n        let i, j, temparray, chunk = 8;\n        for (i = 0, j = allProducts.length; i < j; i += chunk) {\n            temparray = allProducts.slice(i, i + chunk);\n            separatedArray.push(temparray);\n        }\n        \n        setAllProducts(separatedArray);\n        // console.log(separatedArray[0]);\n    }\n    \n    const handleKeyDown = keyCode => {\n        if (\n            currentPage != allProducts.length &&\n            currentPage != 1) {\n        };\n\n        if (keyCode == '39') {\n            if (currentPage != allProducts.length) {\n                setCurrentPage(currentPage + 1);\n            }\n        } else if (keyCode == '37') {\n            if (currentPage != 1) {\n                setCurrentPage(currentPage - 1);\n            }\n        }\n    };\n\n    const handleModalClose = () => {\n        setSelectedProductIndex(null)\n    }\n\n    useEffect(() => {\n        if (allProducts) {\n            setCurrentPageProducts(allProducts[currentPage - 1]);\n        }\n    }, [currentPage, allProducts])\n\n    useEffect(() => {\n        if (page) {\n            setCurrentPage(parseInt(page))\n        }\n    }, []);\n    \n    useEffect(() => {\n        const getPrismicResponse = async () => {\n            const response = await client.query(\n                Prismic.Predicates.at('document.type', 'color-grading')\n                )\n                if (response) {\n                    mergeSlices(response);\n                } else {\n                    console.log('Couldn\\'t retrieve data');\n                }\n            };\n            getPrismicResponse();\n    }, []);\n\n    useEffect(() => {\n        history.push(\"/color-grading&page=\" + currentPage)\n    }, [currentPage]);\n\n    useEffect(() => {\n        // console.log(selectedProductIndex);\n    }, [selectedProductIndex])\n\n    return (\n        <StyledColorGrading className=\"color-grading\">\n            <section\n                onKeyDown={(e) => {handleKeyDown(e.keyCode)}}\n                tabIndex=\"0\"\n            >\n                <section className=\"title-container\">\n                    <h1>Color Grading</h1>\n                    <section className=\"filter\">\n                        <span>Filter by </span>\n                    </section>\n                </section>\n                <StyledProductContainer>\n                    {allProducts ? (\n                        <>\n                            <ul className=\"product-list\">\n                                {allProducts[currentPage - 1].map((product, index) => (\n                                    <ProductItem\n                                        key={index}\n                                        category={product.primary.product_title[0].text}\n                                        productTitle={product.primary.product_title[0].text} \n                                        thumbnailUrl={product.primary.product_thumbnail.url}\n                                        productCategory={product.primary.product_type}\n                                        onClick={() => {\n                                            setSelectedProductIndex(index);\n                                            setIsModalOpen(true);\n                                        }}\n                                    />\n                                ))}\n                            </ul>\n                            {\n                                selectedProductIndex != null && \n                                (<Modal \n                                    productID={selectedProductIndex}\n                                    isModalOpen={isModalOpen}\n                                    productData={\n                                        currentPageProducts[selectedProductIndex].primary\n                                        }\n                                    closeModal={() => {setIsModalOpen(false)}}>\n                                </Modal>)\n                            }\n                            <PaginationControl\n                                currentPage={currentPage}\n                                totalPages={allProducts.length}\n                                setCurrentPage={setCurrentPage}\n                            />\n                        </>\n                    ) : (\n                        <span>No products</span>\n                    )}\n                </StyledProductContainer>\n            </section>\n        </StyledColorGrading>\n    )\n};\n\nexport default ColorGrading;\n\nconst StyledColorGrading = styled.section`\n    .title-container {\n        display: flex;\n        justify-content: space-between;\n        .filter {\n            align-self: flex-end;\n            font-size: .8rem;\n            opacity: .7;\n        }\n    }\n`\n\nconst StyledProductContainer = styled.section`\n    display: flex;\n    flex-direction: column;\n    height: 72vh;\n    margin-top: 20px;\n    .product-list {\n        display: flex;\n        flex-grow: 1;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        overflow: hidden;\n        &:hover li {\n            opacity: .8;\n        }\n        li {\n            transition: .1s ease-in-out opacity;\n        }\n        li:hover {\n            opacity: 1;\n        }\n    }\n`;","import React from 'react';\n\nconst Contact = props => {\n    return (\n        <>\n            <h1>Contact</h1>\n        </>\n    )\n};\n\nexport default Contact;","import ColorGrading from './../pages/ColorGrading';\nimport Contact from './../pages/Contact';\nimport Nosotros from './../pages/Nosotros';\n\nconst routes = [\n    {\n        url: \"/color-grading&page=:page\",\n        name: \"Color Grading\",\n        renderedComponent: ColorGrading,\n        navbarEnabled: true,\n        navbarClass: 'color-grading'\n    },\n    {\n        url: \"/about\",\n        name: \"Nosotros\",\n        renderedComponent: Nosotros,\n        navbarEnabled: true,\n        navbarClass: 'about'\n    },\n    {\n        url: \"/services\",\n        name: \"Servicios\",\n        renderedComponent: Contact,\n        navbarEnabled: true,\n        navbarClass: 'services'\n    },\n    {\n        url: \"/contact\",\n        name: \"Contacto\",\n        renderedComponent: Contact,\n        navbarEnabled: true,\n        navbarClass: 'contact'\n    },\n    {\n        url: \"/\",\n        name: \"\",\n        renderedComponent: ColorGrading,\n        navbarEnabled: false\n    }\n];\n\nexport default routes;","import React, { useEffect } from 'react';\n\nconst Nosotros = props => {\n    useEffect(() => {\n        console.log('hello')\n    }, [])\n    return (\n        <>\n            <h1>Nosotros</h1>\n        </>\n    )\n}\n\nexport default Nosotros;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst StyledNavbar = styled.div`\n    background: #595d67;\n    padding: 15px;\n    border-radius: 50px;\n    ul {\n        display: flex;\n        justify-content: space-between;\n        width: 40%;\n        margin-left: 60%;\n        li {\n            display: inline-block;\n        }\n    }\n`;\n\nconst Navbar = props => {\n    return (\n        <StyledNavbar>\n            <nav>\n                <ul>\n                    {props.routes.map(route => (\n                        route.navbarEnabled && (\n                            <li>\n                                <Link \n                                    to={route.url}\n                                    className={route.navbarClass}>\n                                    {route.name}\n                                </Link>\n                            </li>\n                        )\n                    ))}\n                </ul>\n            </nav>\n        </StyledNavbar>\n    )\n};\n\nexport default Navbar;","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n\tBrowserRouter as Router, \n\tSwitch,\n\tRoute\n} from 'react-router-dom'\nimport './App.css';\nimport routes from './utils/routes';\nimport Navbar from './components/common/Navbar';\nimport ColorGrading from './pages/ColorGrading.js';\nimport Contact from './pages/Contact.js';\n\nconst StyledApp = styled.section`\n\tbackground: #000;\n\twidth: 100vw;\n\theight: 100vh;\n\tpadding: 20px 5%;\n\toverflow: hidden;\n\tmain {\n\t\tmargin-top: 20px;\n\t\th1 {\n\t\t\tfont-size: 3rem;\n\t\t\tcolor: #FFFDF2;\n\t\t}\n\t}\n`;\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<StyledApp>\n\t\t\t\t<Navbar routes={routes}/>\n\t\t\t\t<main>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{routes.map(route => (\n\t\t\t\t\t\t\t<Route path={route.url}>\n\t\t\t\t\t\t\t\t<route.renderedComponent />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\t\t\t</StyledApp>\n\t\t</Router>\n\t);\t\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}